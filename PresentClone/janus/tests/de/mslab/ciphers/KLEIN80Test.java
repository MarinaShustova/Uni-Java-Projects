package de.mslab.ciphers;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class KLEIN80Test extends AbstractCipherTest {
	
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		cipher = new KLEIN80();
	}
	
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
		cipher = null;
	}
	
	@Test
	public void testDecrypt() {
		int[] key = { 0x12,0x34,0x56,0x78,0x90,0xAB,0xCD,0xEF,0x12,0x34 };
		int[] plaintext = { 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF };
		int[] ciphertext = { 0x3F,0x21,0x0F,0x67,0xCB,0x23,0x68,0x7A };
		testDecryption(key, plaintext, ciphertext);
	}
	
	@Test
	public void testDecryptEmptyKey() {
		int[] key = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
		int[] plaintext = { 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF };
		int[] ciphertext = { 0x66,0x77,0xE2,0x0D,0x1A,0x53,0xA4,0x31 };
		testDecryption(key, plaintext, ciphertext);
	}

	@Test
	public void testDecryptEmptyMessage() {
		int[] key = { 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF };
		int[] plaintext = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
		int[] ciphertext = { 0x82,0x24,0x75,0x02,0x27,0x3D,0xCC,0x5F };
		testDecryption(key, plaintext, ciphertext);
	}
	
	@Test
	public void testEncrypt() {
		int[] key = { 0x12,0x34,0x56,0x78,0x90,0xAB,0xCD,0xEF,0x12,0x34 };
		int[] plaintext = { 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF };
		int[] ciphertext = { 0x3F,0x21,0x0F,0x67,0xCB,0x23,0x68,0x7A };
		testEncryption(key, plaintext, ciphertext);
	}
	
	@Test
	public void testEncryptEmptyKey() {
		int[] key = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
		int[] plaintext = { 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF };
		int[] ciphertext = { 0x66,0x77,0xE2,0x0D,0x1A,0x53,0xA4,0x31 };
		testEncryption(key, plaintext, ciphertext);
	}
	
	@Test
	public void testEncryptEmptyMessage() {
		int[] key = { 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF };
		int[] plaintext = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
		int[] ciphertext = { 0x82,0x24,0x75,0x02,0x27,0x3D,0xCC,0x5F };
		testEncryption(key, plaintext, ciphertext);
	}
	
}
