package de.mslab.ciphers;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class PRINCECoreTest extends AbstractCipherTest {
	
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		cipher = new PRINCECore();
	}
	
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
		cipher = null;
	}
	
	@Test
	public void testDecrypt() {
		int[] key = { 0xfe,0xdc,0xba,0x98,0x76,0x54,0x32,0x10 };
		int[] plaintext = { 0x01,0x23,0x45,0x67,0x89,0xab,0xcd,0xef };
		int[] ciphertext = { 0xae,0x25,0xad,0x3c,0xa8,0xfa,0x9c,0xcf };
		testDecryption(key, plaintext, ciphertext);
	}
	
	@Test
	public void testDecryptEmptyValues() {
		int[] key = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
		int[] plaintext = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
		int[] ciphertext = { 0x81,0x86,0x65,0xaa,0x0d,0x02,0xdf,0xda };
		testDecryption(key, plaintext, ciphertext);
	}
	
	@Test
	public void testEncrypt() {
		int[] key = { 0xfe,0xdc,0xba,0x98,0x76,0x54,0x32,0x10 };
		int[] plaintext = { 0x01,0x23,0x45,0x67,0x89,0xab,0xcd,0xef };
		int[] ciphertext = { 0xae,0x25,0xad,0x3c,0xa8,0xfa,0x9c,0xcf };
		testEncryption(key, plaintext, ciphertext);
	}
	
	@Test
	public void testEncryptEmptyValues() {
		int[] key = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
		int[] plaintext = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
		int[] ciphertext = { 0x81,0x86,0x65,0xaa,0x0d,0x02,0xdf,0xda };
		testEncryption(key, plaintext, ciphertext);
	}
	
}
